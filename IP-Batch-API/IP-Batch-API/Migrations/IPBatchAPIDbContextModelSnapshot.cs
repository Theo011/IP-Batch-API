// <auto-generated />
using IP_Batch_API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IP_Batch_API.Migrations
{
    [DbContext(typeof(IPBatchAPIDbContext))]
    partial class IPBatchAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IP_Batch_API.Entities.IPDetail", b =>
                {
                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Ip");

                    b.ToTable("IPDetail");

                    b.HasData(
                        new
                        {
                            Ip = "0.0.0.0",
                            City = "city name",
                            Continent = "continent name",
                            Country = "country name",
                            Latitude = 0.0,
                            Longitude = 0.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
